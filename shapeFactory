from abc import ABC, abstractmethod
class Shape(ABC):
	@abstractmethod
	def drawShape(self):
		pass
	
class Circle(shape):
	
	def drawShape(self):
		print("Drawing a Circle")

class Square(Shape):
	
	def drawShape(self):
		print("Drawing a Square")
	
class Rectangle(Shape):

	def drawShape(self):
		print("Drawing a Rectangle")

class ShapeFactory:
	
	def drawShape(self, shape):
		if shape is "Circle":
			Circle().drawShape()
		elif shape is "Square":
			Square().drawShape()
		elif shape is "Rectangle":
			Rectangle().drawShape()
		else:
			print('Drawing " + shape +" is not supported")